@using Microsoft.AspNetCore.Http.Features

@model TwoFactorAuthenticationViewModel

@{
    var canTrack = ViewContext.HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
}

<zone Name="Title"><h1>@RenderTitleSegments(T["Two-factor Authentication"])</h1></zone>

@if (canTrack)
{
    <div class="mb-5 text-center">
        @if (Model.IsTwoFaEnabled)
        {
            <h4 class="text-center text-success">@T["Two-factor authentication is enabled."]  </h4>
        }
        else
        {
            <h4 class="text-center text-danger">@T["Two-factor authentication is not enabled yet."]  </h4>
        }

        @if (Model.IsTwoFaEnabled)
        {
            if (Model.RecoveryCodesLeft == 0)
            {
                <div class="alert alert-danger text-center">
                    <strong>@T["You have no recovery codes left."]</strong>
                    <p>@T["You must <a href=\"{0}\">generate a new set of recovery codes</a> before you can log in with a recovery code.", Url.Action("GenerateRecoveryCodes")]</p>
                </div>
            }
            else if (Model.RecoveryCodesLeft == 1)
            {
                <div class="alert alert-danger text-center">
                    <strong>@T["You have 1 recovery code left."]</strong>
                    <p>@T["You can <a href=\"{0}\">generate a new set of recovery codes</a>.", Url.Action("GenerateRecoveryCodes")]</p>
                </div>
            }
            else if (Model.RecoveryCodesLeft <= 3)
            {
                <div class="alert alert-warning text-center">
                    <strong>@T["You have {0} recovery {1} left.", Model.RecoveryCodesLeft, T.Plural(Model.RecoveryCodesLeft, "code", "codes")])</strong>
                    <p>@T["You should <a href=\"{0}\">generate a new set of recovery codes</a>.", Url.Action("GenerateRecoveryCodes")]</p>
                </div>
            }

            @if (Model.IsMachineRemembered)
            {
                <form method="post" asp-action="ForgetTwoFactorClient" class="d-inline">
                    <button type="submit" class="btn btn-primary">@T["Forget this browser"]</button>
                </form>
            }

            @if (Model.CanDisableTwoFa)
            {
                <a asp-action="Disable2fa" class="btn btn-primary">@T["Disable two-factor authentication"]</a>
            }

            <a asp-action="GenerateRecoveryCodes" class="btn btn-primary">@T["Reset recovery codes"]</a>
        }
    </div>

    <div class="text-center">
        <h3 class="text-center">@T["Authenticator App"]</h3>
        @if (!Model.HasAuthenticator)
        {
            <a id="enable-authenticator" asp-action="EnableAuthenticator" class="btn btn-primary">@T["Add authenticator app"]</a>
        }
        else
        {
            <a id="enable-authenticator" asp-action="EnableAuthenticator" class="btn btn-primary">@T["Set up authenticator app"]</a>
            <a id="reset-authenticator" asp-action="ResetAuthenticator" class="btn btn-primary">@T["Reset authenticator app"]</a>
        }
    </div>
}
else
{
    <div class="alert alert-danger text-center">
        <strong>@T["Privacy and cookie policy have not been accepted."]</strong>
        <p>@T["You must accept the policy before you can enable two-factor authentication."]</p>
    </div>
}
